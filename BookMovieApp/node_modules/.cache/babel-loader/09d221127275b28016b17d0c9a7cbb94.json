{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Downloads\\\\Cheater react\\\\BookMovieApp\\\\src\\\\common\\\\header\\\\Header.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport Modal from 'react-modal';\nimport './Header.css';\nimport logo from \"../../assets/logo.svg\";\nimport Button from \"@material-ui/core/Button\";\nimport { Tab, Tabs, Box, FormControl, InputLabel, FormHelperText } from '@material-ui/core';\nimport { UserContext } from '../../UserContext';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Input } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", { ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      p: 3,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 48\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 12\n  }, this);\n}\n\n_c = TabPanel;\nexport default function Header({\n  baseUrl\n}) {\n  _s();\n\n  const location = useLocation();\n  const movieId = location.pathname.split(\"/\")[2];\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const [value, setValue] = useState(0);\n  const [userName, setUserName] = useState(\"\");\n  const [reqUserName, setReqUserName] = useState(\"dispNone\");\n  const [password, setPassword] = useState(\"\");\n  const [reqPassword, setReqPassword] = useState(\"dispNone\");\n  const [reqFirstName, setReqFirstName] = useState(\"dispNone\");\n  const [reqLastName, setReqLastName] = useState(\"dispNone\");\n  const [reqEmailAddress, setReqEmailAddress] = useState(\"dispNone\");\n  const [reqRegPassword, setReqRegPassword] = useState(\"dispNone\");\n  const [reqMobileNumber, setReqMobileNumber] = useState(\"dispNone\");\n  const [registration, setRegistration] = useState({\n    \"email_address\": \"\",\n    \"first_name\": \"\",\n    \"last_name\": \"\",\n    \"mobile_number\": \"\",\n    \"password\": \"\"\n  });\n  const [registrationSuccess, setRegistrationSuccess] = useState(\"\");\n  const [userInfo, setUserInfo] = useState({\n    \"id\": \"\",\n    \"first_name\": \"\",\n    \"last_name\": \"\",\n    \"email_address\": \"\",\n    \"mobile_phone\": \"\",\n    \"status\": \"\",\n    \"last_login_time\": \"\",\n    \"role\": {\n      \"id\": 0,\n      \"name\": \"\",\n      \"permissions\": []\n    }\n  });\n  const [state, dispatch] = useContext(UserContext);\n  const history = useHistory();\n  /*\n  * handleChange is used to capture and set Tab selection state \n  */\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  /*\n  * handleRegistrationChange is used to capture Registration input field changes and set in the state\n  */\n\n\n  const handleRegistrationChange = event => {\n    setRegistration({ ...registration,\n      [event.target.name]: event.target.value\n    });\n  };\n  /*\n  * openModalButtonHandler is used to open Modal popup\n  */\n\n\n  const openModalButtonHandler = () => {\n    setIsOpen(true);\n  };\n  /*\n  * closeModalButtonHandler is used to close Modal popup\n  */\n\n\n  const closeModalButtonHandler = () => {\n    setIsOpen(false);\n  };\n  /*\n  * logoutButtonHandler is used to Logout user if logged in\n  */\n\n\n  const logoutButtonHandler = () => {\n    dispatch({\n      type: \"ACCESS_TOKEN\",\n      payLoad: \"\"\n    });\n    setUserName(\"\");\n    setPassword(\"\");\n  };\n  /*\n  * bookShowButtonHandler is used to navigate user to bookshow page\n  */\n\n\n  const bookShowButtonHandler = () => {\n    if (state.accessToken) {\n      history.push(`/bookshow/${movieId}`);\n    } else {\n      openModalButtonHandler();\n    }\n  };\n  /*\n  * loginButtonHandler is used to call auth/login and navigate user accordingly\n  */\n\n\n  const loginButtonHandler = () => {\n    userName === \"\" ? setReqUserName(\"dispBlock\") : setReqUserName(\"dispNone\");\n    userName === \"\" ? setReqPassword(\"dispBlock\") : setReqPassword(\"dispNone\");\n\n    if (userName === \"\" || userName === \"\") {\n      return;\n    }\n\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Basic ' + btoa(`${userName}:${password}`)\n      }\n    };\n    fetch(`${baseUrl}auth/login`, requestOptions).then(response => {\n      const token = response.headers.get(\"access-token\");\n      dispatch({\n        type: \"ACCESS_TOKEN\",\n        payLoad: token\n      });\n      return response.json();\n    }).then(data => {\n      setUserInfo({ ...userInfo,\n        ...data\n      });\n      closeModalButtonHandler();\n\n      if (data.id) {\n        history.push(\"/\");\n      }\n    });\n  };\n  /*\n  * registerButtonHandler is used to call v1/signup and register user and show success/failure message\n  */\n\n\n  const registerButtonHandler = () => {\n    setRegistrationSuccess(\"\");\n    registration.first_name === \"\" ? setReqFirstName(\"dispBlock\") : setReqFirstName(\"dispNone\");\n    registration.last_name === \"\" ? setReqLastName(\"dispBlock\") : setReqLastName(\"dispNone\");\n    registration.email_address === \"\" ? setReqEmailAddress(\"dispBlock\") : setReqEmailAddress(\"dispNone\");\n    registration.password === \"\" ? setReqRegPassword(\"dispBlock\") : setReqRegPassword(\"dispNone\");\n    registration.mobile_number === \"\" ? setReqMobileNumber(\"dispBlock\") : setReqMobileNumber(\"dispNone\");\n\n    if (registration.first_name === \"\" || registration.last_name === \"\" || registration.email_address === \"\" || registration.password === \"\" || registration.mobile_number === \"\") {\n      return;\n    }\n\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(registration)\n    };\n    fetch(`${baseUrl}signup`, requestOptions).then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error(\"Error During Registration\");\n      }\n    }).then(data => {\n      setRegistrationSuccess(\"Registration Successful. Please Login!\");\n      return data;\n    }).catch(error => {\n      setRegistrationSuccess(\"Registration Failed!\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"\",\n        src: logo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this), state.accessToken ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginLogout\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: logoutButtonHandler,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginLogout\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: openModalButtonHandler,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }, this), movieId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bookMyShow padding10\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: bookShowButtonHandler,\n        children: \"Book Show\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: closeModalButtonHandler,\n      style: customStyles,\n      contentLabel: \"Example Modal\",\n      ariaHideApp: false,\n      children: [/*#__PURE__*/_jsxDEV(Tabs, {\n        value: value,\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: \"LOGIN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"REGISTER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: value,\n        index: 0,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alignCenter mtop10\",\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            required: true,\n            className: \"formControlh\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"userName\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"userName\",\n              value: userName,\n              onChange: e => setUserName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n              className: reqUserName,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"red\",\n                children: \"Required\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alignCenter mtop10\",\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            required: true,\n            className: \"formControlh\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"password\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n              className: reqPassword,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"red\",\n                children: \"Required\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alignCenter mtop10\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: loginButtonHandler,\n            children: \"LOGIN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: value,\n        index: 1,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alignCenter mtop10\",\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            required: true,\n            className: \"formControlh\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"first_name\",\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"first_name\",\n              name: \"first_name\",\n              value: registration.first_name,\n              onChange: handleRegistrationChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n              className: reqFirstName,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"red\",\n                children: \"Required\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alignCenter mtop10\",\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            required: true,\n            className: \"formControlh\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"last_name\",\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"last_name\",\n              name: \"last_name\",\n              value: registration.last_name,\n              onChange: handleRegistrationChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n              className: reqLastName,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"red\",\n                children: \"Required\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alignCenter mtop10\",\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            required: true,\n            className: \"formControlh\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"email_address\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"email_address\",\n              name: \"email_address\",\n              value: registration.email_address,\n              onChange: handleRegistrationChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n              className: reqEmailAddress,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"red\",\n                children: \"Required\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alignCenter mtop10\",\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            required: true,\n            className: \"formControlh\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"password\",\n              name: \"password\",\n              value: registration.password,\n              onChange: handleRegistrationChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n              className: reqRegPassword,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"red\",\n                children: \"Required\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alignCenter mtop10\",\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            required: true,\n            className: \"formControlh\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"mobile_number\",\n              children: \"Contact No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"mobile_number\",\n              name: \"mobile_number\",\n              value: registration.mobile_number,\n              onChange: handleRegistrationChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n              className: reqMobileNumber,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"red\",\n                children: \"Required\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alignCenter mtop10\",\n          children: registrationSuccess\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alignCenter mtop10\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: registerButtonHandler,\n            children: \"REGISTER\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Header, \"w8VomzeRUe0puUHusqn/fqHxxT4=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c2 = Header;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"Header\");","map":{"version":3,"sources":["C:/Users/DELL/Downloads/Cheater react/BookMovieApp/src/common/header/Header.js"],"names":["React","useState","useContext","Modal","Button","Tab","Tabs","Box","FormControl","InputLabel","FormHelperText","UserContext","useHistory","useLocation","Input","customStyles","content","top","left","right","bottom","marginRight","transform","TabPanel","props","children","value","index","other","Header","baseUrl","location","movieId","pathname","split","modalIsOpen","setIsOpen","setValue","userName","setUserName","reqUserName","setReqUserName","password","setPassword","reqPassword","setReqPassword","reqFirstName","setReqFirstName","reqLastName","setReqLastName","reqEmailAddress","setReqEmailAddress","reqRegPassword","setReqRegPassword","reqMobileNumber","setReqMobileNumber","registration","setRegistration","registrationSuccess","setRegistrationSuccess","userInfo","setUserInfo","state","dispatch","history","handleChange","event","newValue","handleRegistrationChange","target","name","openModalButtonHandler","closeModalButtonHandler","logoutButtonHandler","type","payLoad","bookShowButtonHandler","accessToken","push","loginButtonHandler","requestOptions","method","headers","btoa","fetch","then","response","token","get","json","data","id","registerButtonHandler","first_name","last_name","email_address","mobile_number","body","JSON","stringify","ok","Error","catch","error","logo","e"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport Modal from 'react-modal';\nimport './Header.css';\nimport logo from '../../assets/logo.svg';\nimport Button from \"@material-ui/core/Button\";\nimport { Tab, Tabs, Box, FormControl, InputLabel, FormHelperText } from '@material-ui/core';\nimport { UserContext } from '../../UserContext';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Input } from '@material-ui/core';\n\nconst customStyles = {\n    content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)',\n    },\n};\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return <div {...other}>{value === index && <Box p={3}>{children}</Box>}</div>;\n}\n\n\nexport default function Header({ baseUrl }) {\n\n    const location = useLocation();\n    const movieId = location.pathname.split(\"/\")[2];\n\n\n\n    const [modalIsOpen, setIsOpen] = useState(false);\n    const [value, setValue] = useState(0);\n    const [userName, setUserName] = useState(\"\");\n    const [reqUserName, setReqUserName] = useState(\"dispNone\");\n    const [password, setPassword] = useState(\"\");\n    const [reqPassword, setReqPassword] = useState(\"dispNone\");\n    const [reqFirstName, setReqFirstName] = useState(\"dispNone\");\n    const [reqLastName, setReqLastName] = useState(\"dispNone\");\n    const [reqEmailAddress, setReqEmailAddress] = useState(\"dispNone\");\n    const [reqRegPassword, setReqRegPassword] = useState(\"dispNone\");\n    const [reqMobileNumber, setReqMobileNumber] = useState(\"dispNone\");\n\n    const [registration, setRegistration] = useState({\n        \"email_address\": \"\",\n        \"first_name\": \"\",\n        \"last_name\": \"\",\n        \"mobile_number\": \"\",\n        \"password\": \"\"\n    });\n    const [registrationSuccess, setRegistrationSuccess] = useState(\"\");\n    const [userInfo, setUserInfo] = useState({ \"id\": \"\", \"first_name\": \"\", \"last_name\": \"\", \"email_address\": \"\", \"mobile_phone\": \"\", \"status\": \"\", \"last_login_time\": \"\", \"role\": { \"id\": 0, \"name\": \"\", \"permissions\": [] } });\n    const [state, dispatch] = useContext(UserContext);\n    const history = useHistory();\n\n    /*\n    * handleChange is used to capture and set Tab selection state \n    */\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    /*\n    * handleRegistrationChange is used to capture Registration input field changes and set in the state\n    */\n    const handleRegistrationChange = (event) => {\n        setRegistration({ ...registration, [event.target.name]: event.target.value });\n    }\n\n    /*\n    * openModalButtonHandler is used to open Modal popup\n    */\n    const openModalButtonHandler = () => {\n        setIsOpen(true);\n    }\n\n    /*\n    * closeModalButtonHandler is used to close Modal popup\n    */\n    const closeModalButtonHandler = () => {\n        setIsOpen(false);\n    }\n\n    /*\n    * logoutButtonHandler is used to Logout user if logged in\n    */\n    const logoutButtonHandler = () => {\n        dispatch({ type: \"ACCESS_TOKEN\", payLoad: \"\" });\n        setUserName(\"\");\n        setPassword(\"\");\n    }\n\n    /*\n    * bookShowButtonHandler is used to navigate user to bookshow page\n    */\n    const bookShowButtonHandler = () => {\n        if (state.accessToken) {\n            history.push(`/bookshow/${movieId}`);\n        } else {\n            openModalButtonHandler();\n        }\n    }\n\n    /*\n    * loginButtonHandler is used to call auth/login and navigate user accordingly\n    */\n    const loginButtonHandler = () => {\n\n        userName === \"\" ? setReqUserName(\"dispBlock\") : setReqUserName(\"dispNone\");\n        userName === \"\" ? setReqPassword(\"dispBlock\") : setReqPassword(\"dispNone\");\n        if (\n            userName === \"\" ||\n            userName === \"\"\n        ) {\n            return;\n        }\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Basic ' + btoa(`${userName}:${password}`)\n            }\n        };\n        fetch(`${baseUrl}auth/login`, requestOptions)\n            .then(response => {\n                const token = response.headers.get(\"access-token\");\n                dispatch({ type: \"ACCESS_TOKEN\", payLoad: token });\n                return response.json();\n            })\n            .then((data) => {\n                setUserInfo({ ...userInfo, ...data });\n                closeModalButtonHandler();\n                if (data.id) {\n                    history.push(\"/\");\n                }\n\n            });\n    }\n\n    /*\n    * registerButtonHandler is used to call v1/signup and register user and show success/failure message\n    */\n    const registerButtonHandler = () => {\n        setRegistrationSuccess(\"\");\n\n        registration.first_name === \"\" ? setReqFirstName(\"dispBlock\") : setReqFirstName(\"dispNone\");\n        registration.last_name === \"\" ? setReqLastName(\"dispBlock\") : setReqLastName(\"dispNone\");\n        registration.email_address === \"\" ? setReqEmailAddress(\"dispBlock\") : setReqEmailAddress(\"dispNone\");\n        registration.password === \"\" ? setReqRegPassword(\"dispBlock\") : setReqRegPassword(\"dispNone\");\n        registration.mobile_number === \"\" ? setReqMobileNumber(\"dispBlock\") : setReqMobileNumber(\"dispNone\");\n        \n        if (\n            registration.first_name === \"\" ||\n            registration.last_name === \"\" ||\n            registration.email_address === \"\" ||\n            registration.password === \"\" ||\n            registration.mobile_number === \"\"\n          ) {\n            return;\n          }\n\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(registration)\n        }\n        fetch(`${baseUrl}signup`, requestOptions)\n            .then(response => {\n                if (response.ok) {\n                    return response.json()\n                } else {\n                    throw new Error(\"Error During Registration\");\n                }\n            }\n            )\n            .then(data => {\n\n                setRegistrationSuccess(\"Registration Successful. Please Login!\");\n                return data;\n            })\n            .catch(error => {\n                setRegistrationSuccess(\"Registration Failed!\");\n\n            }\n            );\n    }\n\n\n\n\n    return (\n        <div id=\"header\">\n\n            <div className=\"logo\">\n                <img alt=\"\" src={logo} />\n            </div>\n\n            {(state.accessToken) ?\n                <div className=\"loginLogout\">\n                    <Button variant=\"contained\" onClick={logoutButtonHandler}>Logout</Button>\n                </div>\n                :\n                <div className=\"loginLogout\">\n                    <Button variant=\"contained\" onClick={openModalButtonHandler}>Login</Button>\n                </div>\n            }\n\n            {movieId &&\n                <div className=\"bookMyShow padding10\" >\n                    <Button variant=\"contained\" color=\"primary\" onClick={bookShowButtonHandler}>Book Show</Button>\n                </div>\n            }\n\n            \n            <Modal\n                isOpen={modalIsOpen}\n                onRequestClose={closeModalButtonHandler}\n                style={customStyles}\n                contentLabel=\"Example Modal\"\n                ariaHideApp={false}\n\n            >\n                <Tabs value={value} onChange={handleChange}>\n                    <Tab label=\"LOGIN\" />\n                    <Tab label=\"REGISTER\" />\n                </Tabs>\n\n                <TabPanel value={value} index={0}>\n                    <div className=\"alignCenter mtop10\">\n                    <FormControl required className=\"formControlh\">\n                        <InputLabel htmlFor=\"userName\">\n                            Username\n                        </InputLabel>\n                        <Input\n                            id=\"userName\"\n                            value={userName}\n                            onChange={(e) => setUserName(e.target.value)}\n                        />\n                        <FormHelperText className={reqUserName}>\n                            <span className=\"red\">Required</span>\n                        </FormHelperText>\n                    </FormControl>\n                    </div>\n                    <div className=\"alignCenter mtop10\">\n                    <FormControl required className=\"formControlh\">\n                        <InputLabel htmlFor=\"password\">\n                            Password\n                        </InputLabel>\n                        <Input\n                            id=\"password\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        />\n                        <FormHelperText className={reqPassword}>\n                            <span className=\"red\">Required</span>\n                        </FormHelperText>\n                    </FormControl>\n                    </div>\n                    <div className=\"alignCenter mtop10\">\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" onClick={loginButtonHandler}>LOGIN</Button>\n                    </div>\n                </TabPanel>\n                <TabPanel value={value} index={1}>\n                    <div className=\"alignCenter mtop10\">\n                    <FormControl required className=\"formControlh\">\n                        <InputLabel htmlFor=\"first_name\">\n                            First Name\n                        </InputLabel>\n                        <Input\n                            id=\"first_name\"\n                            name=\"first_name\"\n                            value={registration.first_name}\n                            onChange={handleRegistrationChange}\n                        />\n                        <FormHelperText className={reqFirstName}>\n                            <span className=\"red\">Required</span>\n                        </FormHelperText>\n                    </FormControl>\n                    </div>\n                    <div className=\"alignCenter mtop10\">\n                    <FormControl required className=\"formControlh\">\n                        <InputLabel htmlFor=\"last_name\">\n                            Last Name\n                        </InputLabel>\n                        <Input\n                            id=\"last_name\"\n                            name=\"last_name\"\n                            value={registration.last_name}\n                            onChange={handleRegistrationChange}\n                        />\n                        <FormHelperText className={reqLastName}>\n                            <span className=\"red\">Required</span>\n                        </FormHelperText>\n                    </FormControl>\n                    </div>\n                    <div className=\"alignCenter mtop10\">\n                    <FormControl required className=\"formControlh\">\n                        <InputLabel htmlFor=\"email_address\">\n                            Email\n                        </InputLabel>\n                        <Input\n                            id=\"email_address\"\n                            name=\"email_address\"\n                            value={registration.email_address}\n                            onChange={handleRegistrationChange}\n                        />\n                        <FormHelperText className={reqEmailAddress}>\n                            <span className=\"red\">Required</span>\n                        </FormHelperText>\n                    </FormControl>\n                    </div>\n                    <div className=\"alignCenter mtop10\">\n                    <FormControl required className=\"formControlh\">\n                        <InputLabel htmlFor=\"password\">\n                            Password\n                        </InputLabel>\n                        <Input\n                            id=\"password\"\n                            name=\"password\"\n                            value={registration.password}\n                            onChange={handleRegistrationChange}\n                        />\n                        <FormHelperText className={reqRegPassword}>\n                            <span className=\"red\">Required</span>\n                        </FormHelperText>\n                    </FormControl>\n                    </div>\n                    <div className=\"alignCenter mtop10\">\n                    <FormControl required className=\"formControlh\">\n                        <InputLabel htmlFor=\"mobile_number\">\n                            Contact No\n                        </InputLabel>\n                        <Input\n                            id=\"mobile_number\"\n                            name=\"mobile_number\"\n                            value={registration.mobile_number}\n                            onChange={handleRegistrationChange}\n                        />\n                        <FormHelperText className={reqMobileNumber}>\n                            <span className=\"red\">Required</span>\n                        </FormHelperText>\n                    </FormControl>\n                    </div>\n                    <div className=\"alignCenter mtop10\">{registrationSuccess}</div>\n                    <div className=\"alignCenter mtop10\">\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" onClick={registerButtonHandler}>REGISTER</Button>\n                    </div>\n\n                </TabPanel>\n            </Modal>\n        </div>\n\n\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}