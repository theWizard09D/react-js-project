{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Downloads\\\\Cheater react\\\\BookMovieApp\\\\src\\\\screens\\\\details\\\\Details.js\",\n    _s = $RefreshSig$();\n\nimport { Typography, ImageList, ImageListItem, ImageListItemBar } from '@material-ui/core';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport Rating from \"@material-ui/lab/Rating\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport YouTube from 'react-youtube';\nimport Header from '../../common/header/Header';\nimport './Details.css';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(1)\n    }\n  },\n  emptyStar: {\n    color: \"black\"\n  },\n  iconHover: {\n    color: \"red\"\n  }\n}));\nexport default function Details(props) {\n  _s();\n\n  useEffect(() => {\n    fetch(`${props.baseUrl}/movies/${props.match.params.id}`).then(response => response.json()).then(data => setMovieDetail(data));\n  }, []);\n  const classes = useStyles();\n  const [movieDetail, setMovieDetail] = useState({\n    \"id\": \"\",\n    \"title\": \"\",\n    \"storyline\": \"\",\n    \"genres\": [],\n    \"duration\": 0,\n    \"poster_url\": \"\",\n    \"trailer_url\": \"\",\n    \"wiki_url\": \"\",\n    \"release_date\": \"\",\n    \"censor_board_rating\": \"\",\n    \"rating\": 0,\n    \"status\": \"\",\n    \"artists\": []\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      baseUrl: props.baseUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"back\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"<\", \" Back to Home \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"details\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: movieDetail.title,\n          src: movieDetail.poster_url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"middle\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h2\",\n          children: movieDetail.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Genre :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 33\n          }, this), \"\\xA0 \", movieDetail.genres.join(\", \")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Duration :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 33\n          }, this), \"\\xA0 \", movieDetail.duration]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Release Date :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 33\n          }, this), \"\\xA0 \", new Date(movieDetail.release_date).toDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Rating :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 33\n          }, this), \"\\xA0 \", movieDetail.rating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: \"mtop16\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Plot :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 52\n          }, this), \"\\xA0 (\", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: movieDetail.wiki_url,\n            target: \"_blank\",\n            children: \"Wiki Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 83\n          }, this), \") \", movieDetail.storyline]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: \"mtop16\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Trailer :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 91\n        }, this), /*#__PURE__*/_jsxDEV(YouTube, {\n          videoId: movieDetail.trailer_url.split('v=')[1],\n          opts: {\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Rate this movie:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Rating, {\n          name: \"half-rating-read\",\n          defaultValue: 0,\n          precision: 1,\n          emptyIcon: /*#__PURE__*/_jsxDEV(StarBorderIcon, {\n            fontSize: \"inherit\",\n            className: classes.emptyStar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mtopbot16\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Artists:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ImageList, {\n          cols: 2,\n          children: movieDetail.artists.map(artist => /*#__PURE__*/_jsxDEV(ImageListItem, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              alt: artist.first_name + \" \" + artist.last_name,\n              src: artist.profile_url\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ImageListItemBar, {\n              title: artist.first_name + \" \" + artist.last_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 33\n            }, this)]\n          }, artist.first_name + \" \" + artist.last_name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Details, \"01q9AJPHswfkqDHlZOprmVfEmuQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = Details;\n\nvar _c;\n\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"sources":["C:/Users/DELL/Downloads/Cheater react/BookMovieApp/src/screens/details/Details.js"],"names":["Typography","ImageList","ImageListItem","ImageListItemBar","StarBorderIcon","Rating","React","useState","useEffect","Link","YouTube","Header","makeStyles","useStyles","theme","root","display","flexDirection","marginTop","spacing","emptyStar","color","iconHover","Details","props","fetch","baseUrl","match","params","id","then","response","json","data","setMovieDetail","classes","movieDetail","title","poster_url","genres","join","duration","Date","release_date","toDateString","rating","wiki_url","storyline","trailer_url","split","width","artists","map","artist","first_name","last_name","profile_url"],"mappings":"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","sourcesContent":["import { Typography, ImageList, ImageListItem, ImageListItemBar} from '@material-ui/core';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport Rating from \"@material-ui/lab/Rating\";\nimport React from 'react';\nimport { useState,useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport YouTube from 'react-youtube';\nimport Header from '../../common/header/Header';\nimport './Details.css';\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n\n    \"& > * + *\": {\n      marginTop: theme.spacing(1)\n    }\n  },\n  emptyStar: {\n    color: \"black\"\n  },\n  iconHover:{\n      color: \"red\"\n  }\n}));\n\nexport default function Details(props) {\n    \n    useEffect(() =>{\n        fetch(`${props.baseUrl}/movies/${props.match.params.id}`)\n        .then(response => response.json())\n        .then(data => setMovieDetail(data));\n    },[]);\n    const classes = useStyles();\n    const [movieDetail, setMovieDetail] = useState({\n        \"id\": \"\",\n        \"title\": \"\",\n        \"storyline\": \"\",\n        \"genres\": [\n        ],\n        \"duration\": 0,\n        \"poster_url\": \"\",\n        \"trailer_url\": \"\",\n        \"wiki_url\": \"\",\n        \"release_date\": \"\",\n        \"censor_board_rating\": \"\",\n        \"rating\": 0,\n        \"status\": \"\",\n        \"artists\": [\n        ]\n      });\n\n      \n    \n    return (\n        <div>\n            <Header baseUrl={props.baseUrl} />\n            <div className=\"back\"> <Link to=\"/\"><Typography >{\"<\"} Back to Home </Typography></Link></div>\n            <div id=\"details\">\n                <div className=\"left\"><img alt={movieDetail.title} src={movieDetail.poster_url}/></div>\n                <div className=\"middle\">\n                    <Typography variant=\"h2\" >{movieDetail.title}</Typography>\n                    \n                    <Typography><strong>Genre :</strong>&nbsp; {movieDetail.genres.join(\", \")}</Typography> \n                    <Typography><strong>Duration :</strong>&nbsp; {movieDetail.duration}</Typography> \n                    <Typography><strong>Release Date :</strong>&nbsp; {new Date(movieDetail.release_date).toDateString()}</Typography> \n                    <Typography><strong>Rating :</strong>&nbsp; {movieDetail.rating}</Typography> \n                    <Typography className=\"mtop16\"><strong>Plot :</strong>&nbsp; (<a href={movieDetail.wiki_url} target=\"_blank\" >Wiki Link</a>) {movieDetail.storyline}</Typography>\n                    <Typography className=\"mtop16\"><strong>Trailer :</strong></Typography><br/>\n                    <YouTube videoId={movieDetail.trailer_url.split('v=')[1]} opts={{width:\"100%\"}}></YouTube>\n                    \n                </div>\n                <div className=\"right\">\n                    <Typography variant=\"h6\">Rate this movie:</Typography>\n                    <br />\n                    <Rating\n                        name=\"half-rating-read\"\n                        defaultValue={0}\n                        precision={1}\n                        \n                        emptyIcon={\n                        <StarBorderIcon fontSize=\"inherit\" className={classes.emptyStar}  />\n                        }\n                        \n                       \n                    />\n                    \n                    \n                    <div className=\"mtopbot16\">\n                        <Typography variant=\"h6\" >Artists:</Typography>\n                    </div>\n                    <ImageList  cols={2}  >\n                        {movieDetail.artists.map(artist => (\n\n                            <ImageListItem key={artist.first_name +\" \"+artist.last_name}>\n\n                                <img alt={artist.first_name +\" \"+artist.last_name} src={artist.profile_url} />\n\n                                <ImageListItemBar\n                                    title={artist.first_name +\" \"+artist.last_name}\n                                />\n\n                            </ImageListItem>\n\n                        ))}\n                    </ImageList>\n                </div>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}